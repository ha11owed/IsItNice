<common:LayoutAwarePage
    x:Name="pageRoot"
    x:Class="IsItNiceGUI.ItemDetailPage"
    DataContext="{Binding DefaultViewModel, RelativeSource={RelativeSource Self}}"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:IsItNiceGUI"
    xmlns:data="using:IsItNiceGUI.Data"
    xmlns:common="using:IsItNiceGUI.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.BottomAppBar>
        <AppBar Padding="10,0,10,0" AutomationProperties.Name="Bottom App Bar">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="50*"/>
                    <ColumnDefinition Width="50*"/>
                </Grid.ColumnDefinitions>
                <StackPanel x:Name="LeftPanel" Orientation="Horizontal" Grid.Column="0" HorizontalAlignment="Left">
                    <Button x:Name="NewNR" Style="{StaticResource NewNRAppBarButtonStyle}" Tag="New Nice Request"
                            Command="{Binding Main.NewNiceRequestCommand}" />
                </StackPanel>
                <StackPanel x:Name="RightPanel" Orientation="Horizontal" Grid.Column="1" HorizontalAlignment="Right">
                    <Button x:Name="Help" Style="{StaticResource HelpAppBarButtonStyle}" Tag="Help" 
                            Command="{Binding Main.HelpCommand}" CommandParameter="{Binding Group}" />
                </StackPanel>
            </Grid>
        </AppBar>
    </Page.BottomAppBar>
    <Page.Resources>

        <!-- Collection of items displayed by this page -->
        <CollectionViewSource
            x:Name="itemsViewSource"
            Source="{Binding Items}"
            d:Source="{Binding AllGroups[0].Items, Source={d:DesignInstance Type=data:SampleDataSource, IsDesignTimeCreatable=True}}"/>

        <DataTemplate x:Key="DataTemplateComment">
            <Grid Width="120" Height="120">
                <Image Height="120" Margin="0" Width="120" Source="{Binding UserImage}"/>
                <StackPanel Orientation="Horizontal">
                    <TextBlock HorizontalAlignment="Left" Margin="14,3,0,0" TextWrapping="Wrap" VerticalAlignment="Top" FontSize="12" Height="16"
                           Visibility="{Binding IsThumbUp, Converter={StaticResource BoolToVis}}">
                        <Run FontFamily="Segoe UI Symbol" Text="Buy" />
                        <Run FontFamily="Segoe UI Symbol" Text="&#xE19F;"/>
                    </TextBlock>
                    <TextBlock HorizontalAlignment="Left" Margin="10,3,0,0" TextWrapping="Wrap" VerticalAlignment="Top" FontSize="12" Height="16"
                       Visibility="{Binding IsThumbDown, Converter={StaticResource BoolToVis}}">
                        <Run FontFamily="Segoe UI Symbol" Text="&#xE19E;"/>
                        <Run FontFamily="Segoe UI Symbol" Text="Don't Buy"/>
                    </TextBlock>
                </StackPanel>
                <TextBlock Margin="0" TextWrapping="Wrap" Text="{Binding Message}" VerticalAlignment="Bottom" Foreground="White" FontSize="16"/>
            </Grid>
        </DataTemplate>
        <ItemsPanelTemplate x:Key="ItemsPanelTemplateComment">
            <WrapGrid Orientation="Vertical" />
        </ItemsPanelTemplate>
        <DataTemplate x:Key="DataTemplateFriendHeader">
        	<Grid/>
        </DataTemplate>
        <ItemsPanelTemplate x:Key="ItemsPanelTemplateFriends">
        	<WrapGrid Orientation="Vertical" />
        </ItemsPanelTemplate>
        <DataTemplate x:Key="DataTemplateFriends">
        	<Grid Width="120" Height="120">
        		<Image Height="120" Margin="0" Width="120" Source="{Binding Image}"/>
        		<TextBox Margin="0" TextWrapping="Wrap" Text="{Binding Name}" VerticalAlignment="Bottom" Foreground="White" BorderThickness="0" FontSize="16" IsReadOnly="True" Background="#FF2B2B2B"/>
        	</Grid>
        </DataTemplate>
        <Style x:Key="GridViewItemStyleFriend" TargetType="GridViewItem">
        	<Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/>
        	<Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"/>
        	<Setter Property="Background" Value="Transparent"/>
        	<Setter Property="TabNavigation" Value="Local"/>
        	<Setter Property="IsHoldingEnabled" Value="True"/>
        	<Setter Property="Margin" Value="0,0,2,2"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="GridViewItem">
        				<Border x:Name="OuterContainer">
        					<VisualStateManager.VisualStateGroups>
        						<VisualStateGroup x:Name="CommonStates">
        							<VisualState x:Name="Normal"/>
        							<VisualState x:Name="PointerOver">
        								<Storyboard>
        									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PointerOverBorder"/>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="SelectionBackground">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedPointerOverBackgroundThemeBrush}"/>
        									</ObjectAnimationUsingKeyFrames>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="SelectedBorder">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedPointerOverBorderThemeBrush}"/>
        									</ObjectAnimationUsingKeyFrames>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="SelectedEarmark">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedPointerOverBackgroundThemeBrush}"/>
        									</ObjectAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="Pressed">
        								<Storyboard>
        									<PointerDownThemeAnimation TargetName="ContentContainer"/>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="PointerOverPressed">
        								<Storyboard>
        									<PointerDownThemeAnimation TargetName="ContentContainer"/>
        									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PointerOverBorder"/>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="SelectionBackground">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedPointerOverBackgroundThemeBrush}"/>
        									</ObjectAnimationUsingKeyFrames>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="SelectedBorder">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedPointerOverBorderThemeBrush}"/>
        									</ObjectAnimationUsingKeyFrames>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="SelectedEarmark">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedPointerOverBackgroundThemeBrush}"/>
        									</ObjectAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="Disabled">
        								<Storyboard>
        									<DoubleAnimation Duration="0" To="{StaticResource ListViewItemDisabledThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="contentPresenter"/>
        								</Storyboard>
        							</VisualState>
        						</VisualStateGroup>
        						<VisualStateGroup x:Name="FocusStates">
        							<VisualState x:Name="Focused">
        								<Storyboard>
        									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisual"/>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="Unfocused"/>
        							<VisualState x:Name="PointerFocused"/>
        						</VisualStateGroup>
        						<VisualStateGroup x:Name="SelectionHintStates">
        							<VisualStateGroup.Transitions>
        								<VisualTransition GeneratedDuration="0:0:0.65" To="NoSelectionHint"/>
        							</VisualStateGroup.Transitions>
        							<VisualState x:Name="VerticalSelectionHint">
        								<Storyboard>
        									<SwipeHintThemeAnimation ToHorizontalOffset="0" TargetName="SelectionBackground" ToVerticalOffset="15"/>
        									<SwipeHintThemeAnimation ToHorizontalOffset="0" TargetName="ContentBorder" ToVerticalOffset="15"/>
        									<SwipeHintThemeAnimation ToHorizontalOffset="0" TargetName="SelectedBorder" ToVerticalOffset="15"/>
        									<SwipeHintThemeAnimation ToHorizontalOffset="0" TargetName="SelectedCheckMark" ToVerticalOffset="15"/>
        									<DoubleAnimationUsingKeyFrames Duration="0:0:0.500" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyph">
        										<DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.5"/>
        										<DiscreteDoubleKeyFrame KeyTime="0:0:0.500" Value="0"/>
        									</DoubleAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="HorizontalSelectionHint">
        								<Storyboard>
        									<SwipeHintThemeAnimation ToHorizontalOffset="-23" TargetName="SelectionBackground" ToVerticalOffset="0"/>
        									<SwipeHintThemeAnimation ToHorizontalOffset="-23" TargetName="ContentBorder" ToVerticalOffset="0"/>
        									<SwipeHintThemeAnimation ToHorizontalOffset="-23" TargetName="SelectedBorder" ToVerticalOffset="0"/>
        									<SwipeHintThemeAnimation ToHorizontalOffset="-23" TargetName="SelectedCheckMark" ToVerticalOffset="0"/>
        									<DoubleAnimationUsingKeyFrames Duration="0:0:0.500" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyph">
        										<DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.5"/>
        										<DiscreteDoubleKeyFrame KeyTime="0:0:0.500" Value="0"/>
        									</DoubleAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="NoSelectionHint"/>
        						</VisualStateGroup>
        						<VisualStateGroup x:Name="SelectionStates">
        							<VisualState x:Name="Unselecting">
        								<Storyboard>
        									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyphBorder"/>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="Unselected">
        								<Storyboard>
        									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyphBorder"/>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="UnselectedPointerOver">
        								<Storyboard>
        									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyphBorder"/>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="contentPresenter">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedForegroundThemeBrush}"/>
        									</ObjectAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="UnselectedSwiping">
        								<Storyboard>
        									<DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectingGlyph"/>
        									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyphBorder"/>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="Selecting">
        								<Storyboard>
        									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectionBackground"/>
        									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
        									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectingGlyph"/>
        									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyphBorder"/>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="contentPresenter">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedForegroundThemeBrush}"/>
        									</ObjectAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="Selected">
        								<Storyboard>
        									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectionBackground"/>
        									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
        									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedCheckMark"/>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="contentPresenter">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedForegroundThemeBrush}"/>
        									</ObjectAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="SelectedSwiping">
        								<Storyboard>
        									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectionBackground"/>
        									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
        									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedCheckMark"/>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="contentPresenter">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedForegroundThemeBrush}"/>
        									</ObjectAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="SelectedUnfocused">
        								<Storyboard>
        									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectionBackground"/>
        									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
        									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedCheckMark"/>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="contentPresenter">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedForegroundThemeBrush}"/>
        									</ObjectAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        						</VisualStateGroup>
        						<VisualStateGroup x:Name="DragStates">
        							<VisualStateGroup.Transitions>
        								<VisualTransition GeneratedDuration="0:0:0.2" To="NotDragging"/>
        							</VisualStateGroup.Transitions>
        							<VisualState x:Name="NotDragging"/>
        							<VisualState x:Name="Dragging">
        								<Storyboard>
        									<DoubleAnimation Duration="0" To="{StaticResource ListViewItemDragThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="InnerDragContent"/>
        									<DragItemThemeAnimation TargetName="InnerDragContent"/>
        									<FadeOutThemeAnimation TargetName="SelectedCheckMarkOuter"/>
        									<FadeOutThemeAnimation TargetName="SelectedBorder"/>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="DraggingTarget">
        								<Storyboard>
        									<DropTargetItemThemeAnimation TargetName="OuterContainer"/>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="MultipleDraggingPrimary">
        								<Storyboard>
        									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MultiArrangeOverlayBackground"/>
        									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MultiArrangeOverlayText"/>
        									<DoubleAnimation Duration="0" To="{StaticResource ListViewItemDragThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentBorder"/>
        									<FadeInThemeAnimation TargetName="MultiArrangeOverlayBackground"/>
        									<FadeInThemeAnimation TargetName="MultiArrangeOverlayText"/>
        									<DragItemThemeAnimation TargetName="ContentBorder"/>
        									<FadeOutThemeAnimation TargetName="SelectionBackground"/>
        									<FadeOutThemeAnimation TargetName="SelectedCheckMarkOuter"/>
        									<FadeOutThemeAnimation TargetName="SelectedBorder"/>
        									<FadeOutThemeAnimation TargetName="PointerOverBorder"/>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="MultipleDraggingSecondary">
        								<Storyboard>
        									<FadeOutThemeAnimation TargetName="ContentContainer"/>
        								</Storyboard>
        							</VisualState>
        						</VisualStateGroup>
        						<VisualStateGroup x:Name="ReorderHintStates">
        							<VisualStateGroup.Transitions>
        								<VisualTransition GeneratedDuration="0:0:0.2" To="NoReorderHint"/>
        							</VisualStateGroup.Transitions>
        							<VisualState x:Name="NoReorderHint"/>
        							<VisualState x:Name="BottomReorderHint">
        								<Storyboard>
        									<DragOverThemeAnimation Direction="Bottom" ToOffset="{StaticResource ListViewItemReorderHintThemeOffset}" TargetName="ReorderHintContent"/>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="TopReorderHint">
        								<Storyboard>
        									<DragOverThemeAnimation Direction="Top" ToOffset="{StaticResource ListViewItemReorderHintThemeOffset}" TargetName="ReorderHintContent"/>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="RightReorderHint">
        								<Storyboard>
        									<DragOverThemeAnimation Direction="Right" ToOffset="{StaticResource ListViewItemReorderHintThemeOffset}" TargetName="ReorderHintContent"/>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="LeftReorderHint">
        								<Storyboard>
        									<DragOverThemeAnimation Direction="Left" ToOffset="{StaticResource ListViewItemReorderHintThemeOffset}" TargetName="ReorderHintContent"/>
        								</Storyboard>
        							</VisualState>
        						</VisualStateGroup>
        						<VisualStateGroup x:Name="DataVirtualizationStates">
        							<VisualState x:Name="DataAvailable"/>
        							<VisualState x:Name="DataPlaceholder">
        								<Storyboard>
        									<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PlaceholderTextBlock">
        										<DiscreteObjectKeyFrame KeyTime="0">
        											<DiscreteObjectKeyFrame.Value>
        												<Visibility>Visible</Visibility>
        											</DiscreteObjectKeyFrame.Value>
        										</DiscreteObjectKeyFrame>
        									</ObjectAnimationUsingKeyFrames>
        									<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PlaceholderRect">
        										<DiscreteObjectKeyFrame KeyTime="0">
        											<DiscreteObjectKeyFrame.Value>
        												<Visibility>Visible</Visibility>
        											</DiscreteObjectKeyFrame.Value>
        										</DiscreteObjectKeyFrame>
        									</ObjectAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        						</VisualStateGroup>
        					</VisualStateManager.VisualStateGroups>
        					<Grid x:Name="ReorderHintContent" Background="Transparent" Width="120" Height="120">
        						<Path x:Name="SelectingGlyph" Data="F1 M133.1,17.9 L137.2,13.2 L144.6,19.6 L156.4,5.8 L161.2,9.9 L145.6,28.4 z" Fill="{StaticResource ListViewItemCheckSelectingThemeBrush}" FlowDirection="LeftToRight" HorizontalAlignment="Right" Height="13" Margin="0,9.5,9.5,0" Opacity="0" Stretch="Fill" VerticalAlignment="Top" Width="15"/>
        						<Border x:Name="HintGlyphBorder" HorizontalAlignment="Right" Height="40" Margin="4" Opacity="0" VerticalAlignment="Top" Width="40">
        							<Path x:Name="HintGlyph" Data="F1 M133.1,17.9 L137.2,13.2 L144.6,19.6 L156.4,5.8 L161.2,9.9 L145.6,28.4 z" Fill="{StaticResource ListViewItemCheckHintThemeBrush}" FlowDirection="LeftToRight" HorizontalAlignment="Right" Height="13" Margin="0,5.5,5.5,0" Opacity="0" Stretch="Fill" VerticalAlignment="Top" Width="15"/>
        						</Border>
        						<Border x:Name="ContentContainer">
        							<Grid x:Name="InnerDragContent">
        								<Rectangle x:Name="PointerOverBorder" Fill="{StaticResource ListViewItemPointerOverBackgroundThemeBrush}" IsHitTestVisible="False" Margin="1" Opacity="0"/>
        								<Rectangle x:Name="FocusVisual" IsHitTestVisible="False" Opacity="0" Stroke="{StaticResource ListViewItemFocusBorderThemeBrush}" StrokeThickness="2"/>
        								<Rectangle x:Name="SelectionBackground" Fill="{StaticResource ListViewItemSelectedBackgroundThemeBrush}" Margin="4" Opacity="0"/>
        								<Border x:Name="ContentBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Margin="4">
        									<Grid>
        										<ContentPresenter x:Name="contentPresenter" ContentTransitions="{TemplateBinding ContentTransitions}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        										<TextBlock x:Name="PlaceholderTextBlock" Foreground="{x:Null}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" Text="Xg" Visibility="Collapsed"/>
        										<Rectangle x:Name="PlaceholderRect" Fill="{StaticResource ListViewItemPlaceholderBackgroundThemeBrush}" IsHitTestVisible="False" Visibility="Collapsed"/>
        										<Rectangle x:Name="MultiArrangeOverlayBackground" Fill="{StaticResource ListViewItemDragBackgroundThemeBrush}" IsHitTestVisible="False" Opacity="0"/>
        									</Grid>
        								</Border>
        								<Rectangle x:Name="SelectedBorder" IsHitTestVisible="False" Margin="4" Opacity="0" Stroke="{StaticResource ListViewItemSelectedBackgroundThemeBrush}" StrokeThickness="{StaticResource GridViewItemSelectedBorderThemeThickness}"/>
        								<Border x:Name="SelectedCheckMarkOuter" HorizontalAlignment="Right" IsHitTestVisible="False" Margin="4" VerticalAlignment="Top">
        									<Grid x:Name="SelectedCheckMark" Height="40" Opacity="0" Width="40">
        										<Path x:Name="SelectedEarmark" Data="M0,0 L40,0 L40,40 z" Fill="{StaticResource ListViewItemSelectedBackgroundThemeBrush}" Stretch="Fill"/>
        										<Path Data="F1 M133.1,17.9 L137.2,13.2 L144.6,19.6 L156.4,5.8 L161.2,9.9 L145.6,28.4 z" Fill="{StaticResource ListViewItemCheckThemeBrush}" FlowDirection="LeftToRight" HorizontalAlignment="Right" Height="13" Margin="0,5.5,5.5,0" Stretch="Fill" VerticalAlignment="Top" Width="15"/>
        									</Grid>
        								</Border>
        								<TextBlock x:Name="MultiArrangeOverlayText" Foreground="{StaticResource ListViewItemDragForegroundThemeBrush}" FontSize="26.667" FontFamily="{StaticResource ContentControlThemeFontFamily}" IsHitTestVisible="False" Margin="18,9,0,0" Opacity="0" TextWrapping="Wrap" Text="{Binding TemplateSettings.DragItemsCount, RelativeSource={RelativeSource Mode=TemplatedParent}}" TextTrimming="WordEllipsis"/>
        							</Grid>
        						</Border>
        					</Grid>
        				</Border>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <DataTemplate x:Key="DataTemplateOppinionsList">
        	<Grid Width="400" Height="100">
                <StackPanel Height="100" VerticalAlignment="Top" AllowDrop="True" Orientation="Horizontal" Background="{Binding IsThumbsUp,Converter={StaticResource BoolToColor}}">
                    <Image HorizontalAlignment="Left" Height="100" Margin="0" VerticalAlignment="Top" Width="100" Source="{Binding UserImage}"/>
        			<StackPanel Width="280">
        				<TextBlock TextWrapping="Wrap" Text="{Binding FromName}" Height="25" Margin="0" Width="280" FontSize="18.667" FontWeight="Bold" Padding="5,5,0,0"/>
        				<TextBlock TextWrapping="Wrap" Text="{Binding Message}" FontSize="16" Padding="5" Height="75" Margin="0" Width="280"/>
        			</StackPanel>
        		</StackPanel>
        	</Grid>
        </DataTemplate>
    </Page.Resources>

    <!--
        This grid acts as a root panel for the page that defines two rows:
        * Row 0 contains the back button and page title
        * Row 1 contains the rest of the page layout
    -->
    <Grid
        Style="{StaticResource LayoutRootStyle}"
        DataContext="{Binding Group}"
        d:DataContext="{Binding AllGroups[0], Source={d:DesignInstance Type=data:SampleDataSource, IsDesignTimeCreatable=True}}">
    	<Grid.Background>
    		<ImageBrush ImageSource="Assets/1254171_39844168.jpg" Opacity="0.1"/>
    	</Grid.Background>

        <Grid.RowDefinitions>
            <RowDefinition Height="140"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!--
            The remainder of the page is one large FlipView that displays details for
            one item at a time, allowing the user to flip through all items in the chosen
            group
        -->
        <FlipView
            x:Name="flipView_MyRequest"
            AutomationProperties.AutomationId="ItemsFlipView"
            AutomationProperties.Name="Item Details"
            TabIndex="1"
            Grid.RowSpan="2"
            ItemsSource="{Binding Source={StaticResource itemsViewSource}}"
            Visibility="{Binding IsMine, Converter={StaticResource BoolToVis}}">

            <FlipView.ItemContainerStyle>
                <Style TargetType="FlipViewItem">
                    <Setter Property="Margin" Value="0,137,0,0"/>
                </Style>
            </FlipView.ItemContainerStyle>

            <FlipView.ItemTemplate>
                <DataTemplate>

                    <!--
                        UserControl chosen as the templated item because it supports visual state management
                        Loaded/unloaded events explicitly subscribe to view state updates from the page
                    -->
                    <UserControl Loaded="StartLayoutUpdates" Unloaded="StopLayoutUpdates">
                        <ScrollViewer x:Name="scrollViewer" Style="{StaticResource HorizontalScrollViewerStyle}" Grid.Row="1" VerticalAlignment="Bottom" VerticalContentAlignment="Bottom">

                            <!-- Content is allowed to flow across as many columns as needed -->

                            <VisualStateManager.VisualStateGroups>

                                <!-- Visual states reflect the application's view state inside the FlipView -->
                                <VisualStateGroup x:Name="ApplicationViewStates">
                                    <VisualState x:Name="FullScreenLandscape"/>
                                    <VisualState x:Name="Filled"/>

                                    <!-- Respect the narrower 100-pixel margin convention for portrait -->
                                    <VisualState x:Name="FullScreenPortrait"/>

                                    <!-- When snapped, the content is reformatted and scrolls vertically -->
                                    <VisualState x:Name="Snapped">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="scrollViewer" Storyboard.TargetProperty="Style">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource VerticalScrollViewerStyle}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        	<Grid Height="625">
                        		<StackPanel Height="550" Margin="37.5,0,942.5,-65" Width="380" VerticalAlignment="Top">
                        			<Image Height="400" Margin="0,0,0,20" Source="{Binding Image}" VerticalAlignment="Top" />
                        		</StackPanel>
                        		<StackPanel Margin="455,0,0,0" HorizontalAlignment="Left" Width="450">
                        			<TextBlock TextWrapping="Wrap" Text="Description" FontSize="26.667" Margin="0,0,0,10"/>
                        			<Border BorderBrush="Black" BorderThickness="0" Height="220" Background="#4C000000">
                        				<TextBlock TextWrapping="Wrap" Text="{Binding Description}" Margin="0" FontSize="21.333" Padding="5"/>
                        			</Border>
                        			<StackPanel Orientation="Horizontal" VerticalAlignment="Top" Height="50" Margin="0,0,0,20">
                        				<TextBlock TextWrapping="Wrap" Text="Price:" FontSize="26.667" Margin="0" Width="100" VerticalAlignment="Top" Height="50"/>
                        				<TextBlock TextWrapping="Wrap" FontSize="26.667" Margin="0" Width="200" HorizontalAlignment="Left" Height="50" Text="{Binding Price}"/>
                        			</StackPanel>
                        			<StackPanel Height="120" Orientation="Horizontal">
                        				<StackPanel Width="120" Margin="0,0,44,0" Background="#FF186C06">
                        					<TextBlock TextWrapping="Wrap" FontSize="64" Margin="0" HorizontalAlignment="Center" Padding="0">
                        						<Span FontFamily="Segoe UI Symbol">
                        							<Run Text="&#xE19F;"/>
                        						</Span>
                        					</TextBlock>
                                            <TextBlock TextWrapping="Wrap" FontSize="26.667" Margin="0" VerticalAlignment="Bottom" FontWeight="Bold" HorizontalAlignment="Center" Padding="0" Text="{Binding ThumbUpCount}"/>
                        				</StackPanel>
                        				<StackPanel Width="120" Margin="0" Background="#FF9B0000" AllowDrop="True">
                        					<TextBlock TextWrapping="Wrap" FontSize="64" Margin="0" HorizontalAlignment="Center" Padding="0">
                        						<Span FontFamily="Segoe UI Symbol">
                        							<Run Text="&#xE19E;"/>
                        						</Span>
                        					</TextBlock>
                                            <TextBlock TextWrapping="Wrap" Text="{Binding ThumbDownCount}" FontSize="26.667" Margin="0" VerticalAlignment="Bottom" FontWeight="Bold" HorizontalAlignment="Center" Padding="0"/>
                        				</StackPanel>
                        				<Button HorizontalAlignment="Center" VerticalAlignment="Center" Padding="0" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch" Width="126" Height="126" Margin="44,0,0,0" BorderThickness="0" Background="#FF0B74A5"
                                                Command="{Binding DecidedCommand}">
                        					<StackPanel Width="122" Margin="0" AllowDrop="True" Height="122">
                        						<TextBlock TextWrapping="Wrap" FontSize="64" Margin="0" Padding="0" HorizontalAlignment="Center" VerticalAlignment="Center" Height="82">
                        							<Span FontFamily="Segoe UI Symbol">
                        								<Run Text="&#xE0E7;"/>
                        							</Span>
                        						</TextBlock>
                        						<TextBlock TextWrapping="Wrap" Text="Decided" FontSize="24" Margin="0" FontWeight="Bold" Padding="0,0,0,0" Height="32" HorizontalAlignment="Center" VerticalAlignment="Top"/>
                        					</StackPanel>
                        				</Button>
                        			</StackPanel>
                        		</StackPanel>
                        		<StackPanel Height="550" Margin="938.5,0,21.5,-65" Width="400" VerticalAlignment="Top">
                        			<TextBlock TextWrapping="Wrap" Text="Oppinions" FontSize="26.667" VerticalAlignment="Top" Padding="0" IsHitTestVisible="False" Margin="0,0,0,10"/>
                        			<ListView ItemTemplate="{StaticResource DataTemplateOppinionsList}" ItemsSource="{Binding Comments}" Height="500"/>
                        		</StackPanel>
                        	</Grid>
                        </ScrollViewer>
                    </UserControl>
                </DataTemplate>
            </FlipView.ItemTemplate>
        </FlipView>
        <FlipView
        	x:Name="flipView_GiveComment"
        	AutomationProperties.AutomationId="ItemsFlipView"
        	AutomationProperties.Name="Item Details"
        	TabIndex="1"
        	Grid.RowSpan="2"
        	ItemsSource="{Binding Source={StaticResource itemsViewSource}}"
            Visibility="{Binding IsNotMine, Converter={StaticResource BoolToVis}}" d:IsHidden="True">

        	<FlipView.ItemContainerStyle>
        		<Style TargetType="FlipViewItem">
        			<Setter Property="Margin" Value="0,137,0,0"/>
        		</Style>
        	</FlipView.ItemContainerStyle>

        	<FlipView.ItemTemplate>
        		<DataTemplate>

                    <!--
                        UserControl chosen as the templated item because it supports visual state management
                        Loaded/unloaded events explicitly subscribe to view state updates from the page
                    -->
        			<UserControl Loaded="StartLayoutUpdates" Unloaded="StopLayoutUpdates">
        				<ScrollViewer x:Name="scrollViewer" Style="{StaticResource HorizontalScrollViewerStyle}" Grid.Row="1" VerticalAlignment="Bottom" VerticalContentAlignment="Bottom">

                            <!-- Content is allowed to flow across as many columns as needed -->

        					<VisualStateManager.VisualStateGroups>

                                <!-- Visual states reflect the application's view state inside the FlipView -->
        						<VisualStateGroup x:Name="ApplicationViewStates">
        							<VisualState x:Name="FullScreenLandscape"/>
        							<VisualState x:Name="Filled"/>

                                    <!-- Respect the narrower 100-pixel margin convention for portrait -->
        							<VisualState x:Name="FullScreenPortrait"/>

                                    <!-- When snapped, the content is reformatted and scrolls vertically -->
        							<VisualState x:Name="Snapped">
        								<Storyboard>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetName="scrollViewer" Storyboard.TargetProperty="Style">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource VerticalScrollViewerStyle}"/>
        									</ObjectAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        						</VisualStateGroup>
        					</VisualStateManager.VisualStateGroups>
        					<Grid Height="625">
        						<StackPanel Height="550" Margin="37.5,0,942.5,-65" Width="380" VerticalAlignment="Top">
        							<Image Height="400" Margin="0,0,0,20" Source="{Binding Image}" VerticalAlignment="Top" />
        						</StackPanel>
        						<StackPanel Margin="455,0,0,0" HorizontalAlignment="Left" Width="450">
        							<TextBlock TextWrapping="Wrap" Text="Description" FontSize="26.667" Margin="0,0,0,10"/>
        							<Border BorderBrush="Black" BorderThickness="0" Height="220" Background="#4C000000">
        								<TextBlock TextWrapping="Wrap" Text="{Binding Description}" Margin="0,0,-2,-122" FontSize="21.333" Padding="5"/>
        							</Border>
        							<StackPanel Orientation="Horizontal" VerticalAlignment="Top" Height="50" Margin="0,0,0,20">
        								<TextBlock TextWrapping="Wrap" Text="Price:" FontSize="26.667" Margin="0" Width="100" VerticalAlignment="Top" Height="50"/>
        								<TextBlock TextWrapping="Wrap" FontSize="26.667" Margin="0" Width="200" HorizontalAlignment="Left" Height="50" Text="{Binding Price}"/>
        							</StackPanel>
        						</StackPanel>
        						<StackPanel Height="550" Margin="938.5,0,21.5,0" Width="400" VerticalAlignment="Top">
        							<TextBlock TextWrapping="Wrap" Text="My Oppinion" FontSize="26.667" VerticalAlignment="Top" Padding="0" IsHitTestVisible="False" Margin="0,0,0,10"/>
        							<TextBox TextWrapping="Wrap" BorderThickness="0" Height="220" Margin="0,0,0,25" Padding="5,3,10,5" FontSize="21.333" Background="#FF515151" Foreground="White" Width="400"
                                             Text="{Binding MyFeedback.Message, Mode=TwoWay}" IsReadOnly="{Binding HasMyFeedback}"/>
        							<StackPanel Height="120" Orientation="Horizontal" Margin="0" Width="400">
        								<Button HorizontalAlignment="Stretch" VerticalAlignment="Stretch" BorderThickness="0" Padding="0" VerticalContentAlignment="Stretch" Width="120" Margin="0,0,40,0" HorizontalContentAlignment="Stretch" Height="120" Foreground="White" Background="#FF186C06"
                                                Command="{Binding SaveFeedbackCommand}" CommandParameter="1">
        									<TextBlock Height="90" TextWrapping="Wrap" Width="80" FontSize="64">
        										<Span FontFamily="Segoe UI Symbol">
        											<Run Text="&#xE19F;"/>
        										</Span>
        									</TextBlock>
        								</Button>
        								<Button HorizontalAlignment="Stretch" VerticalAlignment="Stretch" BorderThickness="0" Padding="0" VerticalContentAlignment="Stretch" Width="120" Margin="0,0,40,0" HorizontalContentAlignment="Stretch" Height="120" Foreground="White" Background="#FF9B0000"
                                                Command="{Binding SaveFeedbackCommand}" CommandParameter="-1">
        									<TextBlock Height="90" TextWrapping="Wrap" Width="80" FontSize="64">
        										<Span FontFamily="Segoe UI Symbol">
        											<Run Text="&#xE19E;"/>
        										</Span>
        									</TextBlock>
        								</Button>
        							</StackPanel>
        						</StackPanel>
        					</Grid>
        				</ScrollViewer>
        			</UserControl>
        		</DataTemplate>
        	</FlipView.ItemTemplate>
        </FlipView>

        <!-- Back button and page title -->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="backButton" Click="GoBack" IsEnabled="{Binding Frame.CanGoBack, ElementName=pageRoot}" Style="{StaticResource BackButtonStyle}"/>
            <TextBlock x:Name="pageTitle" Style="{StaticResource PageHeaderTextStyle}" Grid.Column="1" IsHitTestVisible="false" Margin="0,0,44,34" Height="44" Text="{Binding Title}"/>
        </Grid>

        <VisualStateManager.VisualStateGroups>

            <!-- Visual states reflect the application's view state -->
            <VisualStateGroup x:Name="ApplicationViewStates">
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>

                <!-- The back button respects the narrower 100-pixel margin convention for portrait -->
                <VisualState x:Name="FullScreenPortrait">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PortraitBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>

                <!-- The back button and title have different styles when snapped -->
                <VisualState x:Name="Snapped">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pageTitle" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedPageHeaderTextStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</common:LayoutAwarePage>
